swagger: "2.0"
info:
  title: beego Test API
  description: beego has a very cool tools to autogenerate documents for your API
  version: 1.0.0
  termsOfService: http://beego.me/
  contact:
    email: astaxie@gmail.com
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
basePath: /cmdb
paths:
  /cdkey/:
    get:
      tags:
      - cdkey
      description: get Cdkey
      operationId: CdkeyController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Cdkey'
        "403":
          description: ""
    post:
      tags:
      - cdkey
      description: create Cdkey
      operationId: CdkeyController.Post
      parameters:
      - in: body
        name: body
        description: body for Cdkey content
        required: true
        schema:
          $ref: '#/definitions/models.Cdkey'
      responses:
        "201":
          description: '{int} models.Cdkey'
        "403":
          description: body is empty
  /cdkey/{id}:
    get:
      tags:
      - cdkey
      description: get Cdkey by id
      operationId: CdkeyController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Cdkey'
        "403":
          description: :id is empty
    put:
      tags:
      - cdkey
      description: update the Cdkey
      operationId: CdkeyController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for Cdkey content
        required: true
        schema:
          $ref: '#/definitions/models.Cdkey'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Cdkey'
        "403":
          description: :id is not int
    delete:
      tags:
      - cdkey
      description: delete the Cdkey
      operationId: CdkeyController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /ckeys/:
    get:
      tags:
      - ckeys
      description: get Ckeys
      operationId: CkeysController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Ckeys'
        "403":
          description: ""
    post:
      tags:
      - ckeys
      description: create Ckeys
      operationId: CkeysController.Post
      parameters:
      - in: body
        name: body
        description: body for Ckeys content
        required: true
        schema:
          $ref: '#/definitions/models.Ckeys'
      responses:
        "201":
          description: '{int} models.Ckeys'
        "403":
          description: body is empty
  /ckeys/{id}:
    get:
      tags:
      - ckeys
      description: get Ckeys by id
      operationId: CkeysController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Ckeys'
        "403":
          description: :id is empty
    put:
      tags:
      - ckeys
      description: update the Ckeys
      operationId: CkeysController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for Ckeys content
        required: true
        schema:
          $ref: '#/definitions/models.Ckeys'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Ckeys'
        "403":
          description: :id is not int
    delete:
      tags:
      - ckeys
      description: delete the Ckeys
      operationId: CkeysController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /clink/:
    get:
      tags:
      - clink
      description: get Clink
      operationId: ClinkController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Clink'
        "403":
          description: ""
    post:
      tags:
      - clink
      description: create Clink
      operationId: ClinkController.Post
      parameters:
      - in: body
        name: body
        description: body for Clink content
        required: true
        schema:
          $ref: '#/definitions/models.Clink'
      responses:
        "201":
          description: '{int} models.Clink'
        "403":
          description: body is empty
  /clink/{id}:
    get:
      tags:
      - clink
      description: get Clink by id
      operationId: ClinkController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Clink'
        "403":
          description: :id is empty
    put:
      tags:
      - clink
      description: update the Clink
      operationId: ClinkController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for Clink content
        required: true
        schema:
          $ref: '#/definitions/models.Clink'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Clink'
        "403":
          description: :id is not int
    delete:
      tags:
      - clink
      description: delete the Clink
      operationId: ClinkController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /clog/:
    get:
      tags:
      - clog
      description: get Clog
      operationId: ClogController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Clog'
        "403":
          description: ""
    post:
      tags:
      - clog
      description: create Clog
      operationId: ClogController.Post
      parameters:
      - in: body
        name: body
        description: body for Clog content
        required: true
        schema:
          $ref: '#/definitions/models.Clog'
      responses:
        "201":
          description: '{int} models.Clog'
        "403":
          description: body is empty
  /clog/{id}:
    get:
      tags:
      - clog
      description: get Clog by id
      operationId: ClogController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Clog'
        "403":
          description: :id is empty
    put:
      tags:
      - clog
      description: update the Clog
      operationId: ClogController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for Clog content
        required: true
        schema:
          $ref: '#/definitions/models.Clog'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Clog'
        "403":
          description: :id is not int
    delete:
      tags:
      - clog
      description: delete the Clog
      operationId: ClogController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /cobject/:
    get:
      tags:
      - cobject
      description: get Cobject
      operationId: CobjectController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Cobject'
        "403":
          description: ""
    post:
      tags:
      - cobject
      description: create Cobject
      operationId: CobjectController.Post
      parameters:
      - in: body
        name: body
        description: body for Cobject content
        required: true
        schema:
          $ref: '#/definitions/models.Cobject'
      responses:
        "201":
          description: '{int} models.Cobject'
        "403":
          description: body is empty
  /cobject/{id}:
    get:
      tags:
      - cobject
      description: get Cobject by id
      operationId: CobjectController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Cobject'
        "403":
          description: :id is empty
    put:
      tags:
      - cobject
      description: update the Cobject
      operationId: CobjectController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for Cobject content
        required: true
        schema:
          $ref: '#/definitions/models.Cobject'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Cobject'
        "403":
          description: :id is not int
    delete:
      tags:
      - cobject
      description: delete the Cobject
      operationId: CobjectController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /ctype/:
    get:
      tags:
      - ctype
      description: get Ctype
      operationId: CtypeController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Ctype'
        "403":
          description: ""
    post:
      tags:
      - ctype
      description: create Ctype
      operationId: CtypeController.Post
      parameters:
      - in: body
        name: body
        description: body for Ctype content
        required: true
        schema:
          $ref: '#/definitions/models.Ctype'
      responses:
        "201":
          description: '{int} models.Ctype'
        "403":
          description: body is empty
  /ctype/{id}:
    get:
      tags:
      - ctype
      description: get Ctype by id
      operationId: CtypeController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Ctype'
        "403":
          description: :id is empty
    put:
      tags:
      - ctype
      description: update the Ctype
      operationId: CtypeController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for Ctype content
        required: true
        schema:
          $ref: '#/definitions/models.Ctype'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Ctype'
        "403":
          description: :id is not int
    delete:
      tags:
      - ctype
      description: delete the Ctype
      operationId: CtypeController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
  /cview/:
    get:
      tags:
      - cview
      description: get Cview
      operationId: CviewController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Cview'
        "403":
          description: ""
    post:
      tags:
      - cview
      description: create Cview
      operationId: CviewController.Post
      parameters:
      - in: body
        name: body
        description: body for Cview content
        required: true
        schema:
          $ref: '#/definitions/models.Cview'
      responses:
        "201":
          description: '{int} models.Cview'
        "403":
          description: body is empty
  /cview/{id}:
    get:
      tags:
      - cview
      description: get Cview by id
      operationId: CviewController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Cview'
        "403":
          description: :id is empty
    put:
      tags:
      - cview
      description: update the Cview
      operationId: CviewController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for Cview content
        required: true
        schema:
          $ref: '#/definitions/models.Cview'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Cview'
        "403":
          description: :id is not int
    delete:
      tags:
      - cview
      description: delete the Cview
      operationId: CviewController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "403":
          description: id is empty
definitions:
  models.Cdkey:
    title: Cdkey
    type: object
    properties:
      Id:
        type: integer
        format: int64
      Key:
        type: string
      Name:
        type: string
  models.Ckeys:
    title: Ckeys
    type: object
    properties:
      Cobject:
        $ref: '#/definitions/models.Cobject'
      CreateTime:
        type: string
        format: string
      Id:
        type: integer
        format: int64
      Key:
        type: string
      Name:
        type: string
      UdpateTime:
        type: string
        format: string
  models.Clink:
    title: Clink
    type: object
    properties:
      Ctype:
        $ref: '#/definitions/models.Ctype'
      Id:
        type: integer
        format: int64
      IsRoot:
        type: integer
        format: int32
      Pctype:
        $ref: '#/definitions/models.Ctype'
  models.Clog:
    title: Clog
    type: object
    properties:
      Cobject:
        $ref: '#/definitions/models.Cobject'
      CreateTime:
        type: string
        format: string
      Detail:
        type: string
      Id:
        type: integer
        format: int64
      Result:
        type: string
      Title:
        type: string
      UdpateTime:
        type: string
        format: string
  models.Cobject:
    title: Cobject
    type: object
    properties:
      CreateTime:
        type: string
        format: string
      Ctype:
        $ref: '#/definitions/models.Ctype'
      DispalyName:
        type: string
      Id:
        type: integer
        format: int64
      Name:
        type: string
      Parent:
        $ref: '#/definitions/models.Cobject'
      UdpateTime:
        type: string
        format: string
  models.Ctype:
    title: Ctype
    type: object
    properties:
      Coperations:
        description: 操作 管理
        type: string
      CreateTime:
        type: string
        format: string
      DisplayName:
        type: string
      Id:
        type: integer
        format: int64
      Name:
        type: string
      UdpateTime:
        type: string
        format: string
  models.Cview:
    title: Cview
    type: object
    properties:
      CreateTime:
        type: string
        format: string
      Ctype:
        $ref: '#/definitions/models.Ctype'
        description: 对应的设备类型
      Id:
        type: integer
        format: int64
      IsDefault:
        description: 是否是默认试图
        type: integer
        format: int32
      Keys:
        description: 视图keys 有排序
        type: string
      Name:
        description: 视图名称
        type: string
      UdpateTime:
        type: string
        format: string
tags:
- name: ckeys
  description: |
    CkeysController operations for Ckeys
- name: clink
  description: |
    ClinkController operations for Clink
- name: clog
  description: |
    ClogController operations for Clog
- name: cobject
  description: |
    CobjectController operations for Cobject
- name: ctype
  description: |
    CtypeController operations for Ctype
- name: cview
  description: |
    CviewController operations for Cview
- name: cdkey
  description: |
    CdkeyController operations for Cdkey
